version: '3'

services:
  backend_nginx:
    image: nginx
    container_name: nginx
    network_mode: host
    volumes:
      - ./nginx/datadays.conf:/etc/nginx/conf.d/default.conf
      - ../static/static/:/files/datadays/static/
      - ../static/media/:/files/datadays/media/
        # - ./nginx/datadays.conf:/etc/nginx/conf.d/default.conf
        # - ./nginx/datadays.conf:/etc/nginx/sites-available/datadays
        #- ./nginx/datadays.conf:/etc/nginx/sites-enabled/datadays
        #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
        #- ./nginx/index.html:/usr/share/nginx/html/index.html
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on: 
      - backend_web

  backend_web:
    build:
      dockerfile: ./deploy/Dockerfile
      context: ../
    container_name: web
    volumes: 
      - ../static/static/:/files/datadays/static/
      - ../static/media/:/files/datadays/media/
    ports:
      - 8000:8000
    command: >
      bash -c "
        export DJANGO_SETTINGS_MODULE=thebackend.settings.production;
        python manage.py collectstatic --noinput;
        python manage.py makemigrations;                                    
        python manage.py migrate;
        gunicorn --workers=9 --bind 0.0.0.0:8000 thebackend.wsgi:application --log-level DEBUG;" 
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq
    container_name: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=datadays
      - RABBITMQ_DEFAULT_PASS=herewegoagain
    ports:
      # - 5672:5672
      - 15672:15672

  celery_worker:
    build: 
        dockerfile: ./deploy/Dockerfile
        context: ../  
    container_name: worker
    command: sh -c "celery -A thebackend worker -l info -E"
    depends_on: 
      - rabbitmq
        
  celery_beat:
    build: 
        dockerfile: ./deploy/Dockerfile
        context: ../  
    container_name: beat
    command: sh -c "celery -A thebackend beat -l info"
    depends_on: 
      - rabbitmq
      - celery_worker

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

volumes:
  pgdata:
  rmqdata:
